"use strict";(self.webpackChunktinsfox_blog=self.webpackChunktinsfox_blog||[]).push([[167],{9613:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>d});var n=r(9496);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,l=function(e,t){if(null==e)return{};var r,n,l={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var p=n.createContext({}),i=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},s=function(e){var t=i(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var r=e.components,l=e.mdxType,o=e.originalType,p=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),y=i(r),d=l,g=y["".concat(p,".").concat(d)]||y[d]||u[d]||o;return r?n.createElement(g,a(a({ref:t},s),{},{components:r})):n.createElement(g,a({ref:t},s))}));function d(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=r.length,a=new Array(o);a[0]=y;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:l,a[1]=c;for(var i=2;i<o;i++)a[i]=r[i];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}y.displayName="MDXCreateElement"},4349:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>i});var n=r(665),l=(r(9496),r(9613));const o={},a=void 0,c={unversionedId:"type-challenges/hello-word",id:"type-challenges/hello-word",title:"hello-word",description:"13 - Hello World",source:"@site/docs/type-challenges/hello-word.mdx",sourceDirName:"type-challenges",slug:"/type-challenges/hello-word",permalink:"/docs/type-challenges/hello-word",draft:!1,editUrl:"http://github.com/5fancy-bot.github.io/docs/type-challenges/hello-word.mdx",tags:[],version:"current",frontMatter:{},sidebar:"js",previous:{title:"type-challenges",permalink:"/docs/category/type-challenges"}},p={},i=[{value:"\u9898\u76ee",id:"\u9898\u76ee",level:3},{value:"\u89e3\u7b54",id:"\u89e3\u7b54",level:3}],s={toc:i};function u(e){let{components:t,...r}=e;return(0,l.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"13 - Hello World"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"\u9898\u76ee"},"\u9898\u76ee"),(0,l.kt)("p",null,"Hello, World!"),(0,l.kt)("p",null,"\u8fd9\u4e2a\u7b80\u5355\u7684\u63d0\u95ee\u5e0c\u671b\u8ba9\u4f60\u53ef\u4ee5\u5feb\u901f\u4e0a\u624b Type Challenges\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u4e00\u4e9b\u795e\u5947\u7684\u6280\u5de7\u8ba9 TypeScript \u901a\u8fc7\u81ea\u8eab\u7684\u7c7b\u578b\u7cfb\u7edf\u6765\u5b9e\u73b0\u81ea\u52a8\u5224\u9898\u3002"),(0,l.kt)("p",null,"\u5728\u8fd9\u4e2a\u6311\u6218\u4e2d\uff0c\u4f60\u9700\u8981\u4fee\u6539\u4e0b\u65b9\u7684\u4ee3\u7801\u4f7f\u5f97\u6d4b\u8bd5\u901a\u8fc7\uff08\u4f7f\u5176\u6ca1\u6709\u7c7b\u578b\u9519\u8bef\uff09\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'import type { Equal, Expect, NotAny } from "@type-challenges/utils";\ntype HelloWorld = any;\ntype test = Expect<Equal<HelloWorld, string>>;\ntype HelloWorld = string;\ntype cases = [Expect<NotAny<HelloWorld>>, Expect<Equal<HelloWorld, string>>];\n')),(0,l.kt)("h3",{id:"\u89e3\u7b54"},"\u89e3\u7b54"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'import type { Equal, Expect, NotAny } from "@type-challenges/utils";\n// highlight-start\ntype HelloWorld = string;\n// highlight-end\ntype test = Expect<Equal<HelloWorld, string>>;\ntype HelloWorld = string;\ntype cases = [Expect<NotAny<HelloWorld>>, Expect<Equal<HelloWorld, string>>];\n')))}u.isMDXComponent=!0}}]);