<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://5fancy-bot.github.io/blog</id>
    <title>5fancy-bot Blog</title>
    <updated>2022-07-07T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://5fancy-bot.github.io/blog"/>
    <subtitle>5fancy-bot Blog</subtitle>
    <icon>https://5fancy-bot.github.io/https://avatars.githubusercontent.com/u/108779566?s=400&amp;u=40dfea48a10705e4a1f3fe267f3977498abbae4f&amp;v=4</icon>
    <entry>
        <title type="html"><![CDATA[前端入门怎么学]]></title>
        <id>Road Map</id>
        <link href="https://5fancy-bot.github.io/blog/Road Map"/>
        <updated>2022-07-07T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[写在最前]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithHideOnScrollNavbar_NvlM" id="写在最前">写在最前<a class="hash-link" href="#写在最前" title="标题的直接链接">​</a></h2><p>大家好，我是5fancy-bot，今天来给大家分享一下前端入门的路线，到底要学什么，怎么学，以及学到什么程度可以找到工作。但是5fancy-bot也是个菜鸡，有写的不对的希望大家轻点喷。这些都是我自身的一些经历经验，仅供产考哈。</p><h2 class="anchor anchorWithHideOnScrollNavbar_NvlM" id="question">Question<a class="hash-link" href="#question" title="标题的直接链接">​</a></h2><p>在跟群友交流的时候经常看到有人会问这些问题，下面给大家分享一下<a href="https://github.com/5fancy-bot/5fancy-bot" target="_blank" rel="noopener noreferrer">5fancy-bot</a>的一些经验。</p><ol><li>我要学什么</li><li>我要学到什么程度</li><li>学完这个之后该学什么</li><li>要怎么学，看什么资料或者视频</li><li>用什么做笔记</li><li>现在找工作好找吗</li><li>我要学Vue，还是React还是其他别的框架</li><li>文档都是英文的，看不懂怎么办</li><li>为什么网页打不开</li><li>学多久才能找到工作</li><li>……</li></ol><h2 class="anchor anchorWithHideOnScrollNavbar_NvlM" id="answer">Answer<a class="hash-link" href="#answer" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithHideOnScrollNavbar_NvlM" id="我要学什么学到什么程度该怎么学">我要学什么、学到什么程度、该怎么学<a class="hash-link" href="#我要学什么学到什么程度该怎么学" title="标题的直接链接">​</a></h3><ol><li><p>作为一名前端/准前端，需要学习什么东西呢？首先毫无疑问的是前端的三大宝剑：<a href="https://developer.mozilla.org/en-US/docs/Web/HTML" target="_blank" rel="noopener noreferrer">HTML</a> 、<a href="https://developer.mozilla.org/en-US/docs/Web/CSS" target="_blank" rel="noopener noreferrer">CSS</a>、<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript" target="_blank" rel="noopener noreferrer">JavaScript</a>。这三个是前端的基石，建房子没有砖头，敲代码没有键盘，怎么玩。所以这三个是必学的。那么又要学到什么程度呢？在这里的话又可以引申一下，你的目标是什么？阿里、腾讯、百度、字节等一线大厂的话你需要学的比较深入，一些很细的细节都需要了解；要是中小厂的话了解到一定程度（下面会说到这个程度是到什么程度）就可以了。实习或者是第一份工作都可以找到。</p><ul><li>HTML： 基本的标签需要认识，怎么引入<code>script</code> , <code>css</code>, <code>meta</code> 标签可以用来做什么，HTML的默认样式是什么，怎么去除默认样式，避免默认样式的污染。</li><li>CSS ：常用的布局看到有大概的布局思路，CSS都是大部分都是调出来的，除了一些浸淫多年的大佬可以一眼看出来这个用什么写，下一个套什么样式。但是在面试里面一些常问的布局：圣杯布局、双飞翼布局、<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Aligning_Items_in_a_Flex_Container" target="_blank" rel="noopener noreferrer">flex</a>、<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout" target="_blank" rel="noopener noreferrer">Gird</a>、居中、浮动、哪些样式可以继承、css选择器权重等等。CSS很多很多东西，还有 <code>CSS3</code>  引入的一些新特性。CSS预处理，<a href="https://lesscss.org/" target="_blank" rel="noopener noreferrer">less</a>、<a href="https://sass-lang.com/" target="_blank" rel="noopener noreferrer">saas</a></li><li>JavaScript：JavaScript 是前端里面<strong>最最最重要</strong>的部分。这里分几种情况，一个是面试经常问，考你基础、学习能力、理解能力的；另外一种就是在日常code中经常用的那一部分。类型转换（特别是隐式类型转换），作用域、执行上下文、闭包、原型和原型链、有几种方式判断数据类型，有什么优缺点，那些方式是比较完善的等等，这些是面试官喜欢问的，因为相对来说会比较复杂、抽象。然后就是ES6。ES6是一个统称，在ES5之后的都可以统称为ES6，其中，我在开发中常用到的就有<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array" target="_blank" rel="noopener noreferrer">数组</a>跟<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String" target="_blank" rel="noopener noreferrer">字符串</a>的方法，<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map" target="_blank" rel="noopener noreferrer">map</a>、<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter" target="_blank" rel="noopener noreferrer">filter</a>、<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex" target="_blank" rel="noopener noreferrer">findIndex</a>、<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find" target="_blank" rel="noopener noreferrer">find</a> 、<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach" target="_blank" rel="noopener noreferrer">forEach</a>、<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort" target="_blank" rel="noopener noreferrer">sort</a>等等，基本上数组的方法都很常用而且很好用。字符串：<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/indexOf" target="_blank" rel="noopener noreferrer">indexOf</a> 、<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/slice" target="_blank" rel="noopener noreferrer">slice</a> 、<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace" target="_blank" rel="noopener noreferrer">replace</a> 等（还有太多啦，写不完🤪) 。除此之外还有一些<a href="https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model" target="_blank" rel="noopener noreferrer">DOM</a>的操作，比如事件冒泡、事件委托、事件代理等</li><li>还有浏览器的一些操作：session、cookie、localStorage、浏览器的回流与重绘、url从浏览器输入框输入到页面呈现经历了什么、协商缓存与强缓存等，基本都是去看面经就能看到的面试题。</li><li>接下来就是项目类的一些内容了，很多人会问，JQuery要不要学。我觉得没啥必要，有精力去看一看API就可以了，都是原生DOM一些方法的封装，现在用JQuery的项目都很少了，还在用JQuery的就两种情况，以前遗留下来的；在某些场景，比较简单的页面会用一下。所以 <strong>JQuery没有必要刻意安排时间去学习</strong>。</li><li>在HTML 、CSS、JavaScript（包含ES6）的内容之后可以简单看一下<a href="https://developer.mozilla.org/en-US/docs/Web/Guide/AJAX" target="_blank" rel="noopener noreferrer">ajax </a> ,<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise" target="_blank" rel="noopener noreferrer">Promise</a> 、<strong><a href="https://axios-http.com" target="_blank" rel="noopener noreferrer">axios</a></strong> （之前有说过axios是基于ajax，好像不是这样的，等我学会了再回来捋一捋关系🤡），或者是学了<a href="https://v2.vuejs.org/" target="_blank" rel="noopener noreferrer">Vue2</a>/<a href="https://vuejs.org/" target="_blank" rel="noopener noreferrer">Vue3</a>之后再看也行，没有绝对的先后顺序。为什么是Vue不是React，下面再聊。学了Vue之后就可以做些小项目练手了，或者说是边学边做，目的驱动学习。</li><li>用Vue做项目一般都会用到<a href="https://cli.vuejs.org/index.html" target="_blank" rel="noopener noreferrer">Vue CLI</a> 去创建项目，在Vue 2的时代都是用<a href="https://webpack.js.org/" target="_blank" rel="noopener noreferrer">webpack</a> 去构建的，在近两年才兴起<a href="https://vitejs.dev/" target="_blank" rel="noopener noreferrer">Vite</a> ，这时候可以去了解一下这些打包工具，初级前端简单了解几个概念、插件就可以了，工作中都是新开项目都是其他大佬创建好基础，你再去开发的（当然，在你对这些工具有了足够的了解之后，也可能会让你去搭建项目）</li><li>Vue之后就到了<a href="https://uniapp.dcloud.io/" target="_blank" rel="noopener noreferrer">UniApp</a> ❌，我觉得不对，uniapp我认为是vue + 微信小程序 + 其他。对比一下，微信小程序的文档跟uniapp非常相像。甚至有些东西就是从wx换成了uni。从Vue开始都是一些框架工具了，遇到了问题，第一个方法最后是多看文档。（API调用工程师）。我觉得先学小程序再学uniapp是比较舒服的，过度自然。</li></ul><p>到此，中小厂的初级前端的内容大概就这些了。有些公司可能会要求算法，这个就只能去刷题了，题海战术。到这里的话问题1-3基本回答了。</p></li></ol><h3 class="anchor anchorWithHideOnScrollNavbar_NvlM" id="那么应该怎么学呢">那么应该怎么学呢？<a class="hash-link" href="#那么应该怎么学呢" title="标题的直接链接">​</a></h3><p>   看视频还是看文档。<strong>没有绝对的答案!</strong>  每个人的学习方式习惯都不同，我一开始的时候也是喜欢找视频看，因为没有那么枯燥，有个声音可以听听，还有写文档没有提到的点会给你点出来，还会给你扩展一些题外话。就是看你自己了。BiliBili、腾讯课堂、慕课反正你能找到的资料都是通过搜索引擎找出来的，当然，也可以询问其他人，寻求其他人的推荐，选择优质的课程。但是到了最后文档的优先级会比较高，因为会聚焦内容，你搜了什么关键字对应的内容会相对集中，扩散也不会扩散到哪里去，最多也就像上面那样，给一下外链。<strong>所以不要纠结，合适自己就行</strong> </p><h3 class="anchor anchorWithHideOnScrollNavbar_NvlM" id="用什么做笔记">用什么做笔记。<a class="hash-link" href="#用什么做笔记" title="标题的直接链接">​</a></h3><p>   这个问题其实也是开放性的。程序员比较喜欢的就是使用<a href="https://www.markdownguide.org/" target="_blank" rel="noopener noreferrer">markdown</a> 去写文章，其实你是用word 、 xmind 都可以，东西只要能记下来手写都没有问题。如果你想分享出去的话也可以使用一些工具(vuepress/vitepress/Docusaurus)把笔记生成网站。</p><h3 class="anchor anchorWithHideOnScrollNavbar_NvlM" id="找工作好不好找">找工作好不好找？<a class="hash-link" href="#找工作好不好找" title="标题的直接链接">​</a></h3><p>   这个问题吧，看缘分+努力。自从疫情开始后环境都不好，特别是教育的双减政策之后，一些企业都在裁员，但是只要技术在线，就不怕找不到工作，坚持吧！海投简历就完事儿了。</p><h3 class="anchor anchorWithHideOnScrollNavbar_NvlM" id="我是学vue还是react">我是学Vue还是React？<a class="hash-link" href="#我是学vue还是react" title="标题的直接链接">​</a></h3><p>   对于初学者来说是比较建议先去学Vue。从几个方面去分析一下，第一个是入门的曲线，Vue的入门相对平缓，因为很多他的模板的特性使得跟HTML很想，接受起来更快。同时在国内，Vue在中小企业是比较受欢迎的（当然，这个并不能成为一家公司是否是大厂的标准，大厂一样有不同的事业部采用不同的技术栈），其次，Vue是配有全家桶的，官方直接把一套范式炫你嘴里，开箱即用。而React呢？我一直认为React的难度不在React的本身，而是想要舒服食用React，你需要对React的整个生态有所了解，一个状态管理有七八个库给你选择，但是Vue里面呢？<a href="https://vuex.vuejs.org/index.html" target="_blank" rel="noopener noreferrer">Vuex</a> 、<a href="https://pinia.vuejs.org/introduction.html" target="_blank" rel="noopener noreferrer">Pinia</a> ,然后是 <a href="https://www.typescriptlang.org/" target="_blank" rel="noopener noreferrer">Typescript</a> 。总得来说就是用React之前需要准备的前置知识会比Vue要多一点。（大厂在某种程度上来说会偏爱React） 在面对吃饭的时候，Vue是比较快的，岗位会比较多一点。</p><h3 class="anchor anchorWithHideOnScrollNavbar_NvlM" id="英文文档看不懂怎么办">英文文档看不懂怎么办？<a class="hash-link" href="#英文文档看不懂怎么办" title="标题的直接链接">​</a></h3><p>   如果有点上面的那些外链，你会发现，几乎都是英文的！我故意的，特意选的英文。解决方法是装个翻译插件，翻译与原文结合一起看。这个就是纯纯的安利的，这个好不好呢？萝卜青菜各有所爱吧。如果喜欢中文也有对应的中文版文档。但是一般来说，文档都是英文优先的。</p><h3 class="anchor anchorWithHideOnScrollNavbar_NvlM" id="为什么网页打不开">为什么网页打不开？<a class="hash-link" href="#为什么网页打不开" title="标题的直接链接">​</a></h3><p>   这个原因不多说，但是要学会方法：挂代理。国内开源有gitee，但是我还是推荐GitHub，前端的库在npm上，没有代理有时候项目的依赖都能搞你半天。</p><h3 class="anchor anchorWithHideOnScrollNavbar_NvlM" id="学多久才能找工作">学多久才能找工作<a class="hash-link" href="#学多久才能找工作" title="标题的直接链接">​</a></h3><p>   这个没有可比性的呀！每个人的学习效率不一样，你要说找个时间对比，那么看视频的同学把视频的时长相加就好了，如果你是那种看一遍就能记住的人。想我这种理解能力差的有些知识点会重复看几次，耗时就上来了。</p><h3 class="anchor anchorWithHideOnScrollNavbar_NvlM" id="实习的时候不懂不会怎么办">实习的时候不懂不会怎么办？<a class="hash-link" href="#实习的时候不懂不会怎么办" title="标题的直接链接">​</a></h3><p>   问带你的导师，每个人入职的时候都会安排个人带你，不管怎么都好，他算是你在这家公司的导师了，有啥问题直接问就好了，不要害羞。实习的时候会了是你厉害，不会是正常的。什么都会的话实习做什么？</p><h3 class="anchor anchorWithHideOnScrollNavbar_NvlM" id="要怎么提问">要怎么提问。<a class="hash-link" href="#要怎么提问" title="标题的直接链接">​</a></h3><p>   这个不是提问，是我观察出来的。这个其实很重要！</p><p>   模拟一个场景：中学问数学题。</p><p>   老师，这道题怎么做的？</p><p>   哪个？</p><p>   这个，这样xxx不行吗？</p><p>   上述做了啥。对比一下</p><p>   有大佬在吗？</p><p>   在</p><p>   有没有用过xxx</p><p>   没有，下一位。（用过，你说）</p><p>   ……</p><p>   是一次性把问题输入完成会浪费时间吗？遇到这种情况，我都是看了，然后切换窗口，过了一会回来看问题说出来了没有，没有就算了。难道还要我一步步引导你陈述问题吗？大家都在上班，完整提问我花个十几秒看完了，会的话就会继续看下去，帮你排查一下。去办公室提问你手里都是拿着试卷的。工作的时候你又不能把代码全部给我看，所以提问很重要。其实很多时候说不定就在整理问题的时候就会发现问题的解法是什么，说不定思路就出来了。最好就是可以截屏，手机拍照像素再高有些拍的都不舒服。这里可以看下 <strong>HOW TO ASK QUESTIONS.</strong><a href="http://www.catb.org/~esr/faqs/smart-questions.html" target="_blank" rel="noopener noreferrer">http://www.catb.org/~esr/faqs/smart-questions.html</a>  <a href="https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/blob/main/README-zh_CN.md" target="_blank" rel="noopener noreferrer">https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/blob/main/README-zh_CN.md</a> 好的提问提前解决一半的问题。</p><h2 class="anchor anchorWithHideOnScrollNavbar_NvlM" id="结语">结语<a class="hash-link" href="#结语" title="标题的直接链接">​</a></h2><p>以上是5fancy-bot的一些分享，有说的不对的大家轻点喷哈，还有其他问题想了解的话可以邮箱: <a href="mailto:5fancy.bot@gmail.com" target="_blank" rel="noopener noreferrer">5fancy.bot@gmail.com</a> 给我留言。文章会持续更新。</p>]]></content>
        <category label="前端" term="前端"/>
        <category label="入门" term="入门"/>
        <category label="路线" term="路线"/>
    </entry>
</feed>